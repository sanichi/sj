// pretty-print-json@3.0.4 downloaded from https://ga.jspm.io/npm:pretty-print-json@3.0.4/dist/pretty-print-json.js

const n={version:"3.0.4",toHtml(n,s){const t={indent:3,lineNumbers:false,linkUrls:true,linksNewTab:true,quoteKeys:false,trailingCommas:true};const e={...t,...s};const o=/[<>&]|\\"/g;const toHtml=n=>n==="<"?"&lt;":n===">"?"&gt;":n==="&"?"&amp;":"&bsol;&quot;";const spanTag=(n,s)=>s?"<span class=json-"+n+">"+s+"</span>":"";const buildValueHtml=n=>{const s=/^"/.test(n)&&"string";const t=["true","false"].includes(n)&&"boolean";const o=n==="null"&&"null";const l=t||o||s||"number";const c=/https?:\/\/[^\s"]+/g;const a=e.linksNewTab?" target=_blank":"";const makeLink=n=>`<a class=json-link href="${n}"${a}>${n}</a>`;const r=s&&e.linkUrls?n.replace(c,makeLink):n;return spanTag(l,r)};const replacer=(n,...s)=>{const t={indent:s[0],key:s[1],value:s[2],end:s[3]};const o=e.quoteKeys?/(.*)(): /:/"([\w$]+)": |(.*): /;const l=t.indent||"";const c=t.key&&t.key.replace(o,"$1$2");const a=t.key?spanTag("key",c)+spanTag("mark",": "):"";const r=t.value?buildValueHtml(t.value):"";const i=!t.end||["]","}"].includes(n.at(-1));const u=e.trailingCommas&&n.at(0)===" "&&i;const k=spanTag("mark",u?(t.end??"")+",":t.end);return l+a+r+k};const l=/^( *)("[^"]+": )?("[^"]*"|[\w.+-]*)?([{}[\],]*)?$/gm;const c=JSON.stringify(n,null,e.indent)||"undefined";const a=c.replace(o,toHtml).replace(l,replacer);const makeLine=n=>`   <li>${n}</li>`;const addLineNumbers=n=>["<ol class=json-lines>",...n.split("\n").map(makeLine),"</ol>"].join("\n");return e.lineNumbers?addLineNumbers(a):a}};export{n as prettyPrintJson};


%section
  .header.font-weight-bold= "#{game.participants} player game to #{game.upto}"
  .body
    %p
      = "Started by"
      %span.font-weight-bold= game.user.handle
      = succeed(".") do
        = game_started(game)
    %p
      = "Status:"
      - handles = game.players.map {|p| p.user.handle }
      - count = handles.size
      - needed = game.participants - count
      - if count == 0
        = "no players have joined yet."
      - elsif count == 1
        = "1 player"
        = render "handles", handles: handles
        = "has joined, waiting for"
        %span.font-weight-bold= needed
        = "more."
      - else
        - if needed > 0
          = "some players"
          = render "handles", handles: handles
          = "have joined, waiting for"
          %span.font-weight-bold= needed
          = "more."
        - else
          = "enough players"
          = render "handles", handles: handles
          = "have joined,"
          = succeed(".") do
            - if game.state == Game::WAITING
              %span.font-weight-bold= "ready to play"
            - else
              = "play has"
              %span.font-weight-bold= "already started"
  .footer
    - if game.can_be_joined_by?(current_user)
      = link_to t("game.join"), join_game_path(game), class: "btn btn-success btn-sm"
    - if game.can_be_played_by?(current_user)
      = link_to t("game.play"), play_game_path(game), class: "btn btn-success btn-sm"
    - if game.can_be_left_by?(current_user)
      = link_to t("game.leave"), leave_game_path(game), class: "btn btn-warning btn-sm"
    - if can?(:show, game)
      = link_to t("game.show"), game, class: "btn btn-info btn-sm"
    - if game.can_be_deleted_by?(current_user)
      = link_to t("delete"), game, class: "btn btn-danger btn-sm", method: :delete, data: { confirm: t("sure") }

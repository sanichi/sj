:ruby
  handles = game.players.map {|p| p.user.handle }
  count = handles.size
  needed = game.participants - count

%section
  .header.font-weight-bold= "#{game.participants} player game to #{game.upto}"
  .body
    %span
      = "Status:"
      - if game.state == Game::STARTED
        %span
          = "#{count} players"
          = render "handles", handles: handles
          = "have already"
          = succeed(".") do
            %span.font-weight-bold= "started"
      - else
        - if count == 0
          = "no players have joined yet."
          = "Started by"
          %span.font-weight-bold= game.user.handle
          = succeed(".") do
            = time_ago(game.created_at)
        - elsif count == 1
          = "1 player"
          = render "handles", handles: handles
          = "has joined, waiting for"
          %span.font-weight-bold= needed
          = "more."
        - else
          - if needed > 0
            = "some players"
            = render "handles", handles: handles
            = "have joined, waiting for"
            %span.font-weight-bold= needed
            = "more."
          - else
            = "enough players"
            = render "handles", handles: handles
            = "have joined,"
            = succeed(".") do
              %span.font-weight-bold= "ready to play"
  .footer
    - if game.can_be_joined_by?(current_user)
      = link_to t("game.join"), join_game_path(game), class: "btn btn-success btn-sm"
    - if game.can_be_played_by(current_user)
      = link_to t("game.play"), play_game_path(game), class: "btn btn-success btn-sm"
    - if game.can_be_left_by?(current_user)
      = link_to t("game.leave"), leave_game_path(game), class: "btn btn-warning btn-sm"
    - if can?(:show, game)
      = link_to t("game.show"), game, class: "btn btn-info btn-sm"
    - if game.can_be_deleted_by?(current_user)
      = link_to t("game.delete"), game, class: "btn btn-danger btn-sm", method: :delete, data: { confirm: t("sure") }

import { Elm } from "elm"
import { prettyPrintJson } from "pretty-print-json"

const skyjo = (function() {

  let elm;
  const data = {
    player_id: <%= @player.id %>,
    last_message_id: 0
  };
  const more = <%= @game.finished? ? "false" : "true" %>;
  const debug = <%= @game.debug ? "true" : "false" %>;
  const responses = debug ? document.getElementById("responses") : undefined;

  function pull() {
    $.ajax("/pull.json", {
      data: data,
      dataType: "json",
      success: function(json, status, xhr) {
        if (json.abort) window.location.href = "<%= waiting_games_path %>";
        $.each(json.updates, function(i, update) {
          if (update.mid > data.last_message_id) data.last_message_id = update.mid;
          elm.ports.pullUpdate.send(update);
        });
        if (debug && !empty(json)) responses.insertAdjacentHTML("afterbegin", "<pre>" + prettyPrintJson.toHtml(json) + "</pre>", );
      },
      error: function(xhr) {
        console.log("ajax pull error: " + xhr.status);
      },
      complete: function(xhr) {
        if (more) setTimeout(pull, 1000);
      }
    });
  }

  function push(updates) {
    updates.player_id = data.player_id;
    $.ajax("/push.json", {
      data: updates,
      dataType: "json",
      error: function(xhr) {
        console.log("ajax push error: " + xhr.status);
      },
      complete: function(xhr) {
        if (updates.end_game) window.location.href = "<%= scores_user_path(@player.user) %>";
      }
    });
  }

  function empty(obj) {
    return $.type(obj.updates) == "array" && obj.updates.length == 0
  }

  function set_elm(app) {
    elm = app;
  }

  return {
    pull: pull,
    push: push,
    set_elm: set_elm
  };

})();

$(function() {
  var app = Elm.Main.init({
    node: document.getElementById("elm-main"),
    flags: {
      player_id: <%= @player.id %>,
      players: [ <%= game_js_player_list(@game, @player.id) %> ],
      upto: <%= @game.upto %>,
      options: {
        debug: <%= @game.debug ? "true" : "false" %>,
        four: <%= @game.four ? "true" : "false" %>
      }
    }
  });
  app.ports.pushUpdates.subscribe(function(updates) {
    skyjo.push(updates);
  });
  skyjo.set_elm(app);
  skyjo.pull();
});

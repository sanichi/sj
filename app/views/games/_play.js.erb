import { Elm } from "elm"
import { prettyPrintJson } from "pretty-print-json"

const skyjo = (function() {

  let elm;
  const data = {
    player_id: <%= @player.id %>,
    last_message_id: 0
  };
  const more = <%= @game.finished? ? "false" : "true" %>;
  const debug = <%= @game.debug ? "true" : "false" %>;
  const responses = debug ? document.getElementById("responses") : undefined;

  function pull() {
    const params = new URLSearchParams(data);
    fetch("/pull.json?" + params.toString())
      .then(response => {
        if (!response.ok) throw new Error('bad response: ' + response.statusText);
        return response.json();
      })
      .then(json => {
        if (json.abort) window.location.href = "<%= waiting_games_path %>";
        json.updates.forEach((update) => {
          if (update.mid > data.last_message_id) data.last_message_id = update.mid;
          elm.ports.pullUpdate.send(update);
        });
        if (debug && !boring(json)) responses.insertAdjacentHTML("afterbegin", "<pre>" + prettyPrintJson.toHtml(json) + "</pre>");
        if (more) setTimeout(pull, 1000);
      }).
      catch(error => {
        console.error("pull error:", error);
      });
  }

  function push(updates) {
    updates.player_id = data.player_id;
    const params = new URLSearchParams(updates);
    fetch("/push.json?" + params.toString())
      .then(response => {
        if (!response.ok) throw new Error('bad response: ' + response.statusText);
        return response.json();
      })
      .then(json => {
        if (updates.end_game) window.location.href = "<%= scores_user_path(@player.user) %>";
      })
      .catch(error => {
        console.error("push error:", error);
      });
  }

  function boring(obj) {
    return obj.hasOwnProperty("updates") && Array.isArray(obj.updates) && obj.updates.length == 0
  }

  function set_elm(app) {
    elm = app;
  }

  return {
    pull: pull,
    push: push,
    set_elm: set_elm
  };

})();

document.addEventListener("DOMContentLoaded", () => {
  const app = Elm.Main.init({
    node: document.getElementById("elm-main"),
    flags: {
      player_id: <%= @player.id %>,
      players: [ <%= game_js_player_list(@game, @player.id) %> ],
      upto: <%= @game.upto %>,
      options: {
        debug: <%= @game.debug ? "true" : "false" %>,
        four: <%= @game.four ? "true" : "false" %>
      }
    }
  });
  skyjo.set_elm(app);
  app.ports.pushUpdates.subscribe(function(updates) {
    skyjo.push(updates);
  });
  skyjo.pull();
});
